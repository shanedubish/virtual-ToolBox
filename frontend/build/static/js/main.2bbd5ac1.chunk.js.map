{"version":3,"sources":["components/About.js","components/Main.js","components/Add.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["About","className","React","Component","Main","state","tools","editToggle","toggleEditForm","setState","this","props","getTools","map","tool","i","src","image","alt","name","make","location","type","cost","value","id","onClick","onSubmit","updateThisTool","onKeyUp","updateTool","placeholder","updateType","updateMake","updateCost","updateLocation","updateImage","deleteTool","href","target","Add","createTool","makeNewTool","makeNewType","makeNewMake","makeNewCost","makeNewLocation","makeNewImage","Nav","to","App","axios","get","err","console","log","then","response","data","event","preventDefault","post","newTool","newMake","newCost","newLocation","newType","newImage","getAttribute","put","cars","delete","path","exact","component","render","upadateTool","upadateMake","upadateCost","upadateLocation","upadateType","upadateImage","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2bbd5ac1.chunk.js","sourcesContent":["import React from \"react\";\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <h3>About</h3>\n        <main>\n          <p>lots of stuff</p>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\n\nclass Main extends React.Component {\n  state = {\n    tools: [],\n    editToggle: false,\n  };\n  componentDidMount() {\n    this.props.getTools();\n  }\n  toggleEditForm = () => {\n    this.setState({\n      editToggle: !this.state.editToggle,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h3>Main Page</h3>\n\n        <main>\n          {this.props.tools.map((tool, i) => {\n            return (\n              <div className=\"oneTool\">\n                <img src={tool.image} alt=\"\" />\n                <h2>Name: {tool.name}</h2>\n                <h2>Make: {tool.make}</h2>\n\n                <h2>Location: {tool.location}</h2>\n                <h2>Type: {tool.type}</h2>\n                <h2>Cost: ${tool.cost}</h2>\n                <button\n                  value={this.props.tools.id}\n                  className=\"btn-sm btn-primary m-2\"\n                  onClick={this.toggleEditForm}\n                >\n                  EDIT\n                </button>\n                {this.state.editToggle ? (\n                  <div id={tool.id}>\n                    <form onSubmit={this.props.updateThisTool} id={tool.id}>\n                      <input\n                        id={i}\n                        onKeyUp={this.props.updateTool}\n                        type=\"text\"\n                        placeholder=\"Tool Name\"\n                      />\n                      <br />\n                      <input\n                        id={i}\n                        onKeyUp={this.props.updateType}\n                        type=\"text\"\n                        placeholder=\"Type\"\n                      />\n                      <br />\n                      <input\n                        id={tool.id}\n                        onKeyUp={this.props.updateMake}\n                        type=\"text\"\n                        placeholder=\"Tool Make\"\n                      />\n                      <br />\n                      <input\n                        id={i}\n                        onKeyUp={this.props.updateCost}\n                        type=\"text\"\n                        placeholder=\"Cost \"\n                      />\n                      <br />\n                      <input\n                        id={i}\n                        onKeyUp={this.props.updateLocation}\n                        type=\"text\"\n                        placeholder=\"Location\"\n                      />\n                      <br />\n                      <input\n                        id={i}\n                        onKeyUp={this.props.updateImage}\n                        type=\"text\"\n                        placeholder=\"Image\"\n                      />\n                      <br />\n                      <button type=\"submit\">Edit this Tool</button>\n                    </form>\n                  </div>\n                ) : null}\n                <button onClick={this.props.deleteTool} value={tool.id}>\n                  DELETE\n                </button>\n                <h2>\n                  <a\n                    href={`https://www.amazon.com/s?k=${tool.name}&ref=nb_sb_noss_2`}\n                    target=\"_blank\"\n                  >\n                    Amazon\n                  </a>\n                </h2>\n                <h2>\n                  <a\n                    href={`https://www.ebay.com/sch/i.html?_from=R40&_trksid=p2380057.m570.l1311.R1.TR11.TRC1.A0.H1.Xmider.TRS0&_nkw=${tool.name}&_sacat=0`}\n                    target=\"_blank\"\n                  >\n                    Ebay\n                  </a>\n                </h2>\n              </div>\n            );\n          })}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\n\nclass Add extends React.Component {\n  render() {\n    return (\n      <div className=\"toolForm\">\n        <h2>Add a Tool to your ToolBox</h2>\n        <form className=\"addcar\" onSubmit={this.props.createTool}>\n          <input\n            onKeyUp={this.props.makeNewTool}\n            type=\"text\"\n            placeholder=\"Tool Name\"\n          />\n          <br />\n\n          <input\n            onKeyUp={this.props.makeNewType}\n            type=\"text\"\n            placeholder=\"Type\"\n          />\n          <br />\n          <input\n            onKeyUp={this.props.makeNewMake}\n            type=\"text\"\n            placeholder=\"Tool Make\"\n          />\n          <br />\n          <input\n            onKeyUp={this.props.makeNewCost}\n            type=\"text\"\n            placeholder=\"Cost \"\n          />\n          <br />\n          <input\n            onKeyUp={this.props.makeNewLocation}\n            type=\"text\"\n            placeholder=\"Location\"\n          />\n          <br />\n          <input\n            onKeyUp={this.props.makeNewImage}\n            type=\"text\"\n            placeholder=\"Image\"\n          />\n          <br />\n          <input\n            type=\"submit\"\n            value=\"Create New Tool\"\n            className=\"btn-sm btn-primary\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default Add;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Nav extends React.Component {\n  render() {\n    return (\n      <nav>\n        <div className=\"nav\">\n          <Link to=\"/\">\n            <h2>virtual-ToolBox</h2>\n          </Link>\n          <Link to=\"/main\">\n            <h2>Main</h2>\n          </Link>\n          <Link to=\"/add\">\n            <h2>Add</h2>\n          </Link>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport About from \"./components/About.js\";\nimport Main from \"./components/Main.js\";\nimport Add from \"./components/Add.js\";\nimport Navigation from \"./components/Nav.js\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = { tools: [] };\n\n  //Get Tools\n  getTools = () => {\n    axios\n      .get(\"http://127.0.0.1:8000/api/\", (err) => {\n        console.log(err);\n      })\n      .then((response) => {\n        this.setState({ tools: response.data });\n        console.log(this.state.tools);\n      });\n  };\n\n  //Create a Tool\n\n  createTool = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"http://127.0.0.1:8000/api/create/\", {\n        id: \"\",\n        name: this.state.newTool,\n        make: this.state.newMake,\n        cost: this.state.newCost,\n        location: this.state.newLocation,\n        type: this.state.newType,\n        image: this.state.newImage,\n      })\n      .then((response) => {\n        this.setState({ tools: response.data });\n        console.log(this.state.tools);\n        // window.location.reload(false);\n      });\n  };\n\n  makeNewTool = (event) => {\n    this.setState({ newTool: event.target.value });\n  };\n  makeNewMake = (event) => {\n    this.setState({ newMake: event.target.value });\n  };\n\n  makeNewCost = (event) => {\n    this.setState({ newCost: event.target.value });\n  };\n\n  makeNewLocation = (event) => {\n    this.setState({ newLocation: event.target.value });\n  };\n\n  makeNewType = (event) => {\n    this.setState({ newType: event.target.value });\n  };\n\n  makeNewImage = (event) => {\n    this.setState({ newImage: event.target.value });\n  };\n\n  // Update a Tool\n  updateThisTool = (event) => {\n    event.preventDefault();\n\n    const id = event.target.getAttribute(\"id\");\n    console.log(id);\n    axios\n      .put(\"http://127.0.0.1:8000/api/\" + id, {\n        id: id,\n        name: this.state.updateTool,\n        make: this.state.updateMake,\n        cost: this.state.updateCost,\n        location: this.state.updateLocation,\n        type: this.state.updateType,\n        image: this.state.updateImage,\n      })\n      .then((response) => {\n        this.setState({ cars: response.data });\n      });\n    console.log(\"don't change me !!!\");\n  };\n\n  updateTool = (event) => {\n    //   const id = event.target.getAttribute(\"id\");\n    //   if (event.target.value === \"\") {\n    //    this.setState({ newTool: this.state[id].name });\n    //   } else {\n    this.setState({ newTool: event.target.value });\n    //   }\n  };\n  updateMake = (event) => {\n    // const id = event.target.getAttribute(\"id\");\n    // if (event.target.value === \"\") {\n    // this.setState({ newTool: this.state[id].make });\n    // } else {\n    this.setState({ newTool: event.target.value });\n    // }\n  };\n\n  updateCost = (event) => {\n    //   const id = event.target.getAttribute(\"id\");\n    //   if (event.target.value === \"\") {\n    //     this.setState({ newTool: this.state[id].cost });\n    //   } else {\n    this.setState({ newTool: event.target.value });\n    //   }\n  };\n\n  updateLocation = (event) => {\n    // const id = event.target.getAttribute(\"id\");\n    // if (event.target.value === \"\") {\n    //   this.setState({ newTool: this.state[id].location });\n    // } else {\n    this.setState({ newTool: event.target.value });\n    // }\n  };\n\n  updateType = (event) => {\n    // const id = event.target.getAttribute(\"id\");\n    // if (event.target.value === \"\") {\n    //   this.setState({ newTool: this.state[id].type });\n    // } else {\n    this.setState({ newTool: event.target.value });\n    // }\n  };\n\n  updateImage = (event) => {\n    // const id = event.target.getAttribute(\"id\");\n    // if (event.target.value === \"\") {\n    //   this.setState({ newTool: this.state[id].image });\n    // } else {\n    this.setState({ newTool: event.target.value });\n    // }\n  };\n\n  //  delete this Tool\n  deleteTool = (event) => {\n    console.log(event.target.value);\n    event.preventDefault();\n    axios\n      .delete(\"http://127.0.0.1:8000/api/\" + event.target.value)\n      .then((response) => {\n        this.setState({ tools: response.data });\n      });\n  };\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Navigation />\n            <Route path=\"/\" exact component={About} />\n            <Route\n              path=\"/main\"\n              render={() => (\n                <Main\n                  getTools={this.getTools}\n                  tools={this.state.tools}\n                  deleteTool={this.deleteTool}\n                  updateThisTool={this.updateThisTool}\n                  upadateTool={this.upadateTool}\n                  upadateMake={this.upadateMake}\n                  upadateCost={this.upadateCost}\n                  upadateLocation={this.upadateLocation}\n                  upadateType={this.upadateType}\n                  upadateImage={this.upadateImage}\n                />\n              )}\n            />\n            <Route\n              path=\"/add\"\n              render={() => (\n                <Add\n                  createTool={this.createTool}\n                  makeNewTool={this.makeNewTool}\n                  makeNewMake={this.makeNewMake}\n                  makeNewCost={this.makeNewCost}\n                  makeNewLocation={this.makeNewLocation}\n                  makeNewType={this.makeNewType}\n                  makeNewImage={this.makeNewImage}\n                />\n              )}\n            />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}